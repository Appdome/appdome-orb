description: >
  Running Appdome iOS Auto-DEV private signing.

parameters:
  appdome-api-token:
      type: env_var_name
      description: "Appdome-provided API token"
      default: APPDOME_API_TOKEN
  appFile:
    type: string
    description: "Absolute path to your app"
  team-id:
    type: string
    default: ""
    description: "your Team's ID."
  fusion-set-id-ios:
    type: env_var_name
    default: FUSION_SET_ID_IOS
    description: "Fusion Set with the features you want to add to your iOS application."
  output:
    type: string
    description: "The name of the output fused app."
  provisioning-profiles:
    type: env_var_name
    default: MOBILE_PROVISION_PROFILE_FILE
    description: "A Provisioning Profile allows you to install apps onto your iOS device and includes the signing certificates,
     a list of supported device identifiers, entitlements, and an App ID."
  sign-overrides:
    type: string
    default: ""
    description: "Optional parameter - json file overrides to pass arguments to overrides sign parameters."
  entitlements:
    type: env_var_name
    default: ENTITLEMENTS_FILE
    description: "A plist file with the entitlements used for the application. Can be obtained from the Derived Data folder in Xcode"
steps:
  - run:
      environment:
        APPDOME_API_KEY: <<parameters.appdome-api-token>>
        APPFILE: <<parameters.appFile>>
        FUSIONSET: <<parameters.fusion-set-id-ios>>
        TEAMID: <<parameters.team-id>>
        OUTPUT: <<parameters.output>>
        PROVISIONING_PROFILES: <<parameters.provisioning-profiles>>
        SIGNOVERRIDES: <<parameters.sign-overrides>>
        APPDOME_CLIENT_HEADER: CircleCI/1.0.1
        ENTITLEMENTS: <<parameters.entitlements>>
      name: Build Sign Download (iOS - Auto-DEV private Signing)
      command: <<include(scripts/appdome_ios_autodev_private_sign.sh)>>
